{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Documents/idearoom/app/services/supabase.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\nconst supabaseUrl = \"https://pnvtegstxozyxvuqgckc.supabase.co\";\r\nconst supabaseKey =\r\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBudnRlZ3N0eG96eXh2dXFnY2tjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE5NzgxOTksImV4cCI6MjA1NzU1NDE5OX0.0_sUHEKjHlli9hX6vPc6GtbPFYcUNUbWb6IUxnSSXVQ\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport default supabase;\r\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,cAAc;AACpB,MAAM,cACJ;AACF,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;uCAE5B"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Documents/idearoom/app/api/offer/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport supabase from \"../../services/supabase\";\r\n\r\nexport async function GET(request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const id = searchParams.get(\"id\");\r\n\r\n    if (!id) {\r\n      return NextResponse.json(\r\n        { error: \"ID parameter is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"offered_course\")\r\n      .select(\"*\")\r\n      .eq(\"id\", id)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error(\"Supabase error:\", error);\r\n      return NextResponse.json(\r\n        { error: \"Failed to fetch offer\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    if (!data) {\r\n      return NextResponse.json({ error: \"Offer not found\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAO;IAC/B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,6HAAA,CAAA,UAAQ,CACnC,IAAI,CAAC,kBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwB,GACjC;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACvE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}