{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Documents/idearoom/app/robots.ts"],"sourcesContent":["import { MetadataRoute } from \"next\";\r\n\r\nexport default async function robots(): Promise<MetadataRoute.Robots> {\r\n  return {\r\n    rules: [\r\n      {\r\n        userAgent: \"*\",\r\n        allow: \"/\",\r\n      },\r\n    ],\r\n    sitemap: `${process.env.NEXT_PUBLIC_BASE_URL}/sitemap.xml`,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;AAEe,eAAe;IAC5B,OAAO;QACL,OAAO;YACL;gBACE,WAAW;gBACX,OAAO;YACT;SACD;QACD,SAAS,iEAAoC,YAAY,CAAC;IAC5D;AACF"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Documents/idearoom/app/robots--route-entry.js"],"sourcesContent":["            import { NextResponse } from 'next/server'\n            import handler from \"./robots.ts\"\n            import { resolveRouteData } from\n'next/dist/build/webpack/loaders/metadata/resolve-route-data'\n\n            const contentType = \"text/plain\"\n            const cacheControl = \"public, max-age=0, must-revalidate\"\n            const fileType = \"robots\"\n\n            if (typeof handler !== 'function') {\n                throw new Error('Default export is missing in \"./robots.ts\"')\n            }\n\n            export async function GET() {\n              const data = await handler()\n              const content = resolveRouteData(data, fileType)\n\n              return new NextResponse(content, {\n                headers: {\n                  'Content-Type': contentType,\n                  'Cache-Control': cacheControl,\n                },\n              })\n            }\n        "],"names":[],"mappings":";;;AAAY;AACA;AACA;;;;AAGA,MAAM,cAAc;AACpB,MAAM,eAAe;AACrB,MAAM,WAAW;AAEjB,IAAI,OAAO,6GAAA,CAAA,UAAO,KAAK,YAAY;IAC/B,MAAM,IAAI,MAAM;AACpB;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM,CAAA,GAAA,6GAAA,CAAA,UAAO,AAAD;IACzB,MAAM,UAAU,CAAA,GAAA,mMAAA,CAAA,mBAAgB,AAAD,EAAE,MAAM;IAEvC,OAAO,IAAI,8HAAA,CAAA,eAAY,CAAC,SAAS;QAC/B,SAAS;YACP,gBAAgB;YAChB,iBAAiB;QACnB;IACF;AACF"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}